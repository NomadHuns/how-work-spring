package config;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import controller.BoardController;
import controller.UserController;
import model.BoardRepository;

/*
 * http//localhost:8080/user/join.do
 * http//localhost:8080/user/userinfo.do
 * http//localhost:8080/board/list.do
 * http//localhost:8080/board/detail.do
 */

@WebServlet("*.do")
public class DispatcherServlet extends HttpServlet{
	
	private static final long serialVersionUID = 1L;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String path = req.getRequestURI().substring(1).split("/")[0];
		String action = req.getRequestURI().substring(1).split("/")[1].replace(".do", "");
		System.out.println(path);
		System.out.println(action);
		UserController userCon = UserController.getInstance();
		BoardRepository boardRepository = new BoardRepository();
		BoardController boardCon = new BoardController(boardRepository);
		if (path.equals("user")) {
			if (action.equals("join")) {
				String data = userCon.join();
				resp.setHeader("Content-type", "text/plain; charset=utf-8");
				PrintWriter pw = resp.getWriter();
				pw.println(data);
			} else if (action.equals("userinfo")) {
				Model model = new Model(req);
				String viewName = userCon.userinfo(model);
				viewName = ViewResolver.genarate(viewName);
				req.getRequestDispatcher(viewName).forward(req, resp);
			}
		} else if (path.equals("board")) {
			if (action.equals("list")) {
				Model model = new Model(req);
				String viewName = boardCon.list(model);
				viewName = ViewResolver.genarate(viewName);
				req.getRequestDispatcher(viewName).forward(req, resp);
			} else if (action.equals("detail")) {
				Model model = new Model(req);
				String viewName = boardCon.detail(model);
				viewName = ViewResolver.genarate(viewName);
				req.getRequestDispatcher(viewName).forward(req, resp);
			}
		}
	}
}
